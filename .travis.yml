language: cpp

compiler: clang

notifications:
  email: false

install: # Prepare system
# Update cmake
    - cd
    - wget http://www.cmake.org/files/v3.2/cmake-3.2.1-Linux-x86_64.tar.gz
    - sudo mkdir /usr/local/opt
    - cd /usr/local/opt
    - sudo tar -zxvf ~/cmake-3.2.1-Linux-x86_64.tar.gz
    - export PATH="/usr/local/opt/cmake-3.2.1-Linux-x86_64/bin:$PATH"
# Install C++11-compatible clang-3.6
    - sudo add-apt-repository 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.6 main'
    - sudo add-apt-repository 'deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu precise main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key|sudo apt-key add -
    - sudo apt-get update -qq
    - sudo apt-get install clang-3.6 libclang1-3.6 libllvm3.6 llvm-3.6 llvm-3.6-runtime
# Coveralls Code Coverage
    - sudo pip install cpp-coveralls
# Build and install libc++
    - cd
    - export CXXFLAGS="-std=c++0x -stdlib=libc++"
    - svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk libcxx
    - cd libcxx/lib && bash buildit
    - sudo cp ./libc++.so.1.0 /usr/lib/
    - sudo mkdir /usr/include/c++/v1
    - cd .. && sudo cp -r include/* /usr/include/c++/v1/
    - cd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so
    - sudo ln -sf libc++.so.1.0 libc++.so.1 && cd $cwd
    - sudo ldconfig
# Build and install libc++abi
    - svn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi
    - cd libcxxabi/lib
    - ./buildit
    - sudo cp libc++abi.so.1.0 /usr/lib
    - sudo ln -s /usr/lib/libc++abi.so.1.0 /usr/lib/libc++abi.so.1
    - sudo ln -s /usr/lib/libc++abi.so.1 /usr/lib/libc++abi.so
    - cd .. && sudo cp -r include/* /usr/include/c++/v1/
    - export CXX="clang++-3.6"
# flawfinder C++ linter
    - sudo apt-get install flawfinder
# Initialize  Project
    - cd $TRAVIS_BUILD_DIR

script: # Build and Test
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then build_and_test() { rm -rf build; ./build.sh; ./build/algorithmscpp; }; fi
# Undefined and Address Sanitizers
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then export SAN="UA"; fi
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then build_and_test; fi
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then ./lint_and_analyze.sh; fi 
# Memory Sanitizer: Temporarily disabled because it's difficult to build the standard libraries with -fsanitize=memory
    #- export SAN="M"
    #- build_and_test
# Thread Sanitizer
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then export SAN="T"; fi
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then export COVERAGE=true; fi
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then build_and_test; fi

after_success:
    - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then coveralls -t 6EbYFzTh2DqoPYIqEOwchkuWCs6Nyr2cK -i $TRAVIS_BUILD_DIR/src/ -r $TRAVIS_BUILD_DIR --gcov-options '\-lp'; fi
    - if [ ${COVERITY_SCAN_BRANCH} == 1 ]; then cat build/cov-int/build-log.txt; fi
    - if [ ${COVERITY_SCAN_BRANCH} == 1 ]; then cat build/cov-int/scm_log.txt; fi

branches:
    only:
        - master
        - coverity_scan

# Coverity Scan
env:
  global:
   - secure: "LCN318jdJNOlUGVMJ571Rq8M0tye1vP8CO4YIjFqCb/VtqvSZpiGVEVbuM5Pd5y2NlfWp5DR/Cy7mHh5wbaQ1HVHXjT0sE0f+sMk4V8YmVo6Nb5usrc/kt88xolhJZe//DnRykAOHb3oLEJsoJTAt32Wh8cPiSrKzrMzmQAFfVQ="

addons:
  coverity_scan:
    project:
      name: "alexdunn/aalgocpp"
      description: "Build submitted via Travis CI"
    notification_email: worthless.trash.junk@icloud.com
    build_command_prepend: "cov-configure --comptype clangcxx --compiler clang++-3.6; export CXXFLAGS='-std=c++11 -stdlib=libc++'; ./get_deps.sh; mkdir build; cd build; cmake .."
    build_command:   "make"
    branch_pattern: coverity_scan

